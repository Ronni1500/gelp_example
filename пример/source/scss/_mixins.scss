@mixin clearfix {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

@mixin clear {
	display: block;
	clear: both;
	width: 100%;
}

@mixin abs-center {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	display: block;
	margin: auto;
}

@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin breakpoint($min: 0, $max: 0) {
	$type: type-of($min);
	@if $type == string {
		@if $min == xs {
			@media (max-width: 767px) { @content; }
		}
		// @else if $min == sm {
		// 	@media (min-width: 768px) { @content; }
		// }
		@else if $min == md {
			@media (min-width: 768px) { @content; }
		}
		@else if $min == lg {
			@media (min-width: 1200px) { @content; }
		}
		@else if $min == xl {
			@media (min-width: 1920px) { @content; }
		}
		@else {
			@warn "Breakpoint mixin supports: xs, sm, md, lg";
	}
	}
	@else if $type == number {
		$query: "all" !default;
		@if $min != 0 and $max != 0 {
			$query: "(min-width: #{$min}) and (max-width: #{$max})";
		}
		@else if $min != 0 and $max == 0 {
			$query: "(min-width: #{$min})";
		}
		@else if $min == 0 and $max != 0 {
			$query: "(max-width: #{$max})";
		}
		@media #{$query} {
			@content;
		}
	}
}